/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package so.coutinho.lucas.brainslab.view;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import so.coutinho.lucas.brainslab.model.Labirinto;
import static so.coutinho.lucas.brainslab.model.Labirinto.*;
import so.coutinho.lucas.brainslab.model.Posicao;

/**
 *
 * @author lucas.oliveira
 */
public class TelaInicial extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicial
     */
    public TelaInicial() throws FileNotFoundException {
        initComponents();

        labirinto = new Labirinto(new File("./src/main/resources/files/labirinto001.txt"));

        initJImagePanels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setMinimumSize(new java.awt.Dimension(400, 50));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 50));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jTextField1.setText("jTextField1");
        jPanel1.add(jTextField1);

        jToggleButton1.setText("Carregar arquivo");
        jToggleButton1.setMaximumSize(new java.awt.Dimension(150, 50));
        jToggleButton1.setMinimumSize(new java.awt.Dimension(150, 50));
        jToggleButton1.setPreferredSize(new java.awt.Dimension(150, 50));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setMinimumSize(new java.awt.Dimension(400, 250));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel3.setPreferredSize(new java.awt.Dimension(250, 250));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel4.setMinimumSize(new java.awt.Dimension(150, 250));
        jPanel4.setPreferredSize(new java.awt.Dimension(150, 250));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed

        labirinto.moverGato();
        labirinto.moverRato();
        initJImagePanels();
        this.setVisible(true);

        if (labirinto.acabou()) {
            jToggleButton1.setEnabled(false);
        }

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaInicial().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
    private Labirinto labirinto;
    private static final Color BG_COLOR = Color.GREEN;
    private static final JImagePanel CAT = new JImagePanel("./src/main/resources/img/an-cat.png", BG_COLOR);
    private static final JImagePanel ENTRANCE = new JImagePanel("./src/main/resources/img/entrance.png", BG_COLOR);
    private static final JImagePanel ENTRANCE_CAT = new JImagePanel("./src/main/resources/img/an-cat-entrance.png", BG_COLOR);
    private static final JImagePanel ENTRANCE_MOUSE = new JImagePanel("./src/main/resources/img/an-mouse-entrance.png", BG_COLOR);
    private static final JImagePanel EXIT = new JImagePanel("./src/main/resources/img/exit.png", BG_COLOR);
    private static final JImagePanel EXIT_CAT = new JImagePanel("./src/main/resources/img/an-cat-exit.png", BG_COLOR);
    private static final JImagePanel EXIT_MOUSE = new JImagePanel("./src/main/resources/img/an-mouse-exit.png", BG_COLOR);
    private static final JImagePanel MOUSE = new JImagePanel("./src/main/resources/img/an-mouse.png", BG_COLOR);
    private static final JImagePanel PATH = new JImagePanel("", BG_COLOR);
    private static final JImagePanel WALL = new JImagePanel("./src/main/resources/img/wall.png", BG_COLOR);

    private void initJImagePanels() {
        jPanel3.removeAll();

        if (labirinto == null) {
            jPanel3.setLayout(new java.awt.GridLayout(5, 5));
            for (int i = 0; i < 25; i++) {
                jPanel3.add(WALL.clone());
            }
        } else {
            jPanel3.setLayout(new java.awt.GridLayout(labirinto.getMaximoLinhas(), labirinto.getMaximoColunas()));
            for (int linha = 0; linha < labirinto.getMaximoLinhas(); linha++) {
                for (int coluna = 0; coluna < labirinto.getMaximoColunas(); coluna++) {
                    Posicao posicaoAtual = new Posicao(linha, coluna);
                    Character posicao = labirinto.getCaminho(posicaoAtual);

                    if (posicao.equals(PAREDE)) {
                        jPanel3.add(WALL.clone());
                    } else if (posicao.equals(ENTRADA)) {
                        JImagePanel jImagePanel = ENTRANCE.clone();

                        if (posicaoAtual.equals(labirinto.getRatoPosicao())) {
                            jImagePanel = ENTRANCE_MOUSE.clone();
                        }
                        if (posicaoAtual.equals(labirinto.getGatoPosicao())) {
                            jImagePanel = ENTRANCE_CAT.clone();
                        }

                        jPanel3.add(jImagePanel);
                    } else if (posicao.equals(SAIDA)) {
                        JImagePanel jImagePanel = EXIT.clone();

                        if (posicaoAtual.equals(labirinto.getRatoPosicao())) {
                            jImagePanel = EXIT_MOUSE.clone();
                        }
                        if (posicaoAtual.equals(labirinto.getGatoPosicao())) {
                            jImagePanel = EXIT_CAT.clone();
                        }

                        jPanel3.add(jImagePanel);
                    } else {
                        JImagePanel jImagePanel = PATH.clone();

                        if (posicaoAtual.equals(labirinto.getRatoPosicao())) {
                            jImagePanel = MOUSE.clone();
                        }
                        if (posicaoAtual.equals(labirinto.getGatoPosicao())) {
                            jImagePanel = CAT.clone();
                        }

                        jPanel3.add(jImagePanel);
                    }

                }
            }
        }
    }

}
